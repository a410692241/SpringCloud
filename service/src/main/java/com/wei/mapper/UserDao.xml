<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wei.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.wei.bo.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="head_image" jdbcType="VARCHAR" property="headImage" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="is_sharer" jdbcType="VARCHAR" property="isSharer" />
    <result column="id_card_front" jdbcType="VARCHAR" property="idCardFront" />
    <result column="id_card_back" jdbcType="VARCHAR" property="idCardBack" />
    <result column="is_procurer" jdbcType="VARCHAR" property="isProcurer" />
    <result column="default_receive_address_id" jdbcType="INTEGER" property="defaultReceiveAddressId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, nickname, head_image, birthday, sex, mobile, qq, email, real_name, is_sharer, 
    id_card_front, id_card_back, is_procurer, default_receive_address_id, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.wei.bo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wei.bo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.wei.bo.User" useGeneratedKeys="true">
    insert into user (nickname, head_image, birthday, 
      sex, mobile, qq, email, 
      real_name, is_sharer, id_card_front, 
      id_card_back, is_procurer, default_receive_address_id, 
      create_time, update_time)
    values (#{nickname,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{sex,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{isSharer,jdbcType=VARCHAR}, #{idCardFront,jdbcType=VARCHAR}, 
      #{idCardBack,jdbcType=VARCHAR}, #{isProcurer,jdbcType=VARCHAR}, #{defaultReceiveAddressId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.wei.bo.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        nickname,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="isSharer != null">
        is_sharer,
      </if>
      <if test="idCardFront != null">
        id_card_front,
      </if>
      <if test="idCardBack != null">
        id_card_back,
      </if>
      <if test="isProcurer != null">
        is_procurer,
      </if>
      <if test="defaultReceiveAddressId != null">
        default_receive_address_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="isSharer != null">
        #{isSharer,jdbcType=VARCHAR},
      </if>
      <if test="idCardFront != null">
        #{idCardFront,jdbcType=VARCHAR},
      </if>
      <if test="idCardBack != null">
        #{idCardBack,jdbcType=VARCHAR},
      </if>
      <if test="isProcurer != null">
        #{isProcurer,jdbcType=VARCHAR},
      </if>
      <if test="defaultReceiveAddressId != null">
        #{defaultReceiveAddressId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wei.bo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.headImage != null">
        head_image = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.isSharer != null">
        is_sharer = #{record.isSharer,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardFront != null">
        id_card_front = #{record.idCardFront,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardBack != null">
        id_card_back = #{record.idCardBack,jdbcType=VARCHAR},
      </if>
      <if test="record.isProcurer != null">
        is_procurer = #{record.isProcurer,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultReceiveAddressId != null">
        default_receive_address_id = #{record.defaultReceiveAddressId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      head_image = #{record.headImage,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      is_sharer = #{record.isSharer,jdbcType=VARCHAR},
      id_card_front = #{record.idCardFront,jdbcType=VARCHAR},
      id_card_back = #{record.idCardBack,jdbcType=VARCHAR},
      is_procurer = #{record.isProcurer,jdbcType=VARCHAR},
      default_receive_address_id = #{record.defaultReceiveAddressId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wei.bo.User">
    update user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="isSharer != null">
        is_sharer = #{isSharer,jdbcType=VARCHAR},
      </if>
      <if test="idCardFront != null">
        id_card_front = #{idCardFront,jdbcType=VARCHAR},
      </if>
      <if test="idCardBack != null">
        id_card_back = #{idCardBack,jdbcType=VARCHAR},
      </if>
      <if test="isProcurer != null">
        is_procurer = #{isProcurer,jdbcType=VARCHAR},
      </if>
      <if test="defaultReceiveAddressId != null">
        default_receive_address_id = #{defaultReceiveAddressId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wei.bo.User">
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      is_sharer = #{isSharer,jdbcType=VARCHAR},
      id_card_front = #{idCardFront,jdbcType=VARCHAR},
      id_card_back = #{idCardBack,jdbcType=VARCHAR},
      is_procurer = #{isProcurer,jdbcType=VARCHAR},
      default_receive_address_id = #{defaultReceiveAddressId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>